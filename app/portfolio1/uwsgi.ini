[uwsgi]

# Djangoプロジェクトのパス
chdir = /usr/src/app/portfolio1
# Djangoのエントリポイント
module = portfolio1.wsgi:application
# staticファイルパス
static-map = /static=/usr/src/app/portfolio1/static
# uWSGIのルートプロセスが作成するPIDファイルのパス(必須)
pidfile = /var/run/uwsgi/uwsgi.pid

# Unix Domain Socketを使って通信するときに利用するソケット設定
# uWSGIはHTTPでも通信が可能だが、socketを使う方が速く、一般的であるようなので、socketを使う。
# 「python」はdockerネットワーク上のpythonコンテナの名前。
socket = python:8000

# Pythonのホームディレクトリ。venv環境の時はvenvディレクトリ
# Docker利用時はvenvを利用する意味が無いので、ここでは設定せず、直にインストールされているPythonを利用する。
#home = /usr/src/app/venv

# uWSGIをデーモンモード(常駐モード)で動かす場合のログファイル
# フォアグラウンドで動かすので、設定不要。
#daemonize = /var/log/uwsgi/uWSGI-@(exec://date +%%Y-%%m-%%d).log
#daemonize = /var/log/uwsgi/uwsgi.log
#daemonize = /dev/stdout

# ロギング
# ロギングはDockerに委譲するため、デフォルトの動作であるstdoutへの出力を利用する。
#logto = /var/log/uwsgi/uwsgi.log
# ログ出力をmaster processに委譲するか
#log-master = true

# ユーザ
uid = wanchi
# グループ
gid = wanchi

# マスタープロセスからワーカーを起動するか
master = true
# ワーカープロセスの数
processes = 5
# 無応答が続いたプロセスをkillするまでの秒数
#harakiri = 30
# プロセスを再起動するまでのリクエスト数(メモリリーク等による膨張回避用の模様)
max-requests = 5000
# プロセス終了時にソケット等の生成ファイルを削除するか
vacuum = true

# ログファイルの所有権をuidパラメータで指定したユーザに変更するか
#logfile-chown = on
# リロード後にログファイルを開き直すか
#log-reopen = true
# ログファイルの最大サイズ
#log-maxsize = 8000000
# リクエスト毎にログを記録するか
disable-logging = false
# HTTP Status 4xxのエラーをログに記録するか
log-4xx = false
# HTTP Status 5xxのエラーをログに記録するか
log-5xx = true
